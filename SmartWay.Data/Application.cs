//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartWay.Data
{
    using System;
    using System.Collections.Generic;
    
    public partial class Application
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Application()
        {
            this.ApplicationCompanies = new HashSet<ApplicationCompany>();
            this.ApplicationConnections = new HashSet<ApplicationConnection>();
            this.ApplicationConnections1 = new HashSet<ApplicationConnection>();
            this.ApplicationInformations = new HashSet<ApplicationInformation>();
            this.ApplicationJobFunctions = new HashSet<ApplicationJobFunction>();
            this.ApplicationModules = new HashSet<ApplicationModule>();
            this.SystemMaintenanceCompanies = new HashSet<SystemMaintenanceCompany>();
            this.SystemMaintenanceCompanies1 = new HashSet<SystemMaintenanceCompany>();
            this.SystemMaintenanceCompanies2 = new HashSet<SystemMaintenanceCompany>();
            this.SystemMaintenanceCompanies3 = new HashSet<SystemMaintenanceCompany>();
            this.SystemMaintenanceCompanies4 = new HashSet<SystemMaintenanceCompany>();
            this.SystemMaintenanceCompanies5 = new HashSet<SystemMaintenanceCompany>();
            this.Applications1 = new HashSet<Application>();
            this.BizProcessApplications = new HashSet<BizProcessApplication>();
            this.ItemApplications = new HashSet<ItemApplication>();
            this.SystemExtendedSystemFields = new HashSet<SystemExtendedSystemField>();
            this.SystemFileLinks = new HashSet<SystemFileLink>();
            this.DocRepositories = new HashSet<DocRepository>();
            this.Scenarios = new HashSet<Scenario>();
        }
    
        public int ID { get; set; }
        public string Name { get; set; }
        public string Description { get; set; }
        public string Manager { get; set; }
        public string TopologyFileName { get; set; }
        public Nullable<bool> IsSubsystem { get; set; }
        public Nullable<bool> IsOpenSystem { get; set; }
        public Nullable<bool> IsInfrastructure { get; set; }
        public Nullable<int> CriticalLevelID { get; set; }
        public string Alias { get; set; }
        public Nullable<int> TypeID { get; set; }
        public Nullable<int> SectionID { get; set; }
        public Nullable<bool> HasDRP { get; set; }
        public Nullable<bool> IsProprietary { get; set; }
        public Nullable<bool> HasDevelopementEnv { get; set; }
        public Nullable<bool> HasStagingEnv { get; set; }
        public string SLA { get; set; }
        public Nullable<int> ParentID { get; set; }
        public Nullable<bool> EnabledDRP { get; set; }
        public string LastName { get; set; }
        public string FirstName { get; set; }
        public string ShadowName { get; set; }
        public string UserGUID { get; set; }
        public string UserName { get; set; }
        public Nullable<bool> PermissionEnable { get; set; }
        public string Instruction { get; set; }
        public Nullable<int> SensitivityID { get; set; }
        public string SensitivityDesc { get; set; }
        public string NamingConvention { get; set; }
        public string SysuserID { get; set; }
        public Nullable<bool> RequiredInDR { get; set; }
        public Nullable<System.DateTime> LastUpdate { get; set; }
        public string ApplicationsVersion { get; set; }
        public string WorkflowID { get; set; }
        public Nullable<bool> DevQAEnv { get; set; }
        public Nullable<bool> DevTestENV { get; set; }
        public Nullable<int> DownTimeID { get; set; }
        public Nullable<bool> HasAsEnv { get; set; }
        public Nullable<int> MoveStatus { get; set; }
        public bool IsOpenCheckList { get; set; }
        public string UserManager { get; set; }
        public string PrefixSuffix { get; set; }
        public Nullable<int> LoadOrderID { get; set; }
        public Nullable<System.DateTime> StartDate { get; set; }
        public Nullable<int> StatusID { get; set; }
        public Nullable<int> SlaTierID { get; set; }
        public Nullable<int> TechnologyID { get; set; }
        public Nullable<bool> IsSystemInformation { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ApplicationCompany> ApplicationCompanies { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ApplicationConnection> ApplicationConnections { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ApplicationConnection> ApplicationConnections1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ApplicationInformation> ApplicationInformations { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ApplicationJobFunction> ApplicationJobFunctions { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ApplicationModule> ApplicationModules { get; set; }
        public virtual DownTime DownTime { get; set; }
        public virtual ApplicationType ApplicationType { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SystemMaintenanceCompany> SystemMaintenanceCompanies { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SystemMaintenanceCompany> SystemMaintenanceCompanies1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SystemMaintenanceCompany> SystemMaintenanceCompanies2 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SystemMaintenanceCompany> SystemMaintenanceCompanies3 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SystemMaintenanceCompany> SystemMaintenanceCompanies4 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SystemMaintenanceCompany> SystemMaintenanceCompanies5 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Application> Applications1 { get; set; }
        public virtual Application Application1 { get; set; }
        public virtual Application Applications11 { get; set; }
        public virtual Application Application2 { get; set; }
        public virtual Application Applications12 { get; set; }
        public virtual Application Application3 { get; set; }
        public virtual ApplicationSection ApplicationSection { get; set; }
        public virtual CriticalLevel CriticalLevel { get; set; }
        public virtual DRPLoadOrder DRPLoadOrder { get; set; }
        public virtual Technology Technology { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<BizProcessApplication> BizProcessApplications { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ItemApplication> ItemApplications { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SystemExtendedSystemField> SystemExtendedSystemFields { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SystemFileLink> SystemFileLinks { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DocRepository> DocRepositories { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Scenario> Scenarios { get; set; }
    }
}
