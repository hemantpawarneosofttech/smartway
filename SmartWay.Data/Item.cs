//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SmartWay.Data
{
    using System;
    using System.Collections.Generic;
    
    public partial class Item
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Item()
        {
            this.AccessDetails = new HashSet<AccessDetail>();
            this.CableItems = new HashSet<CableItem>();
            this.CableItems1 = new HashSet<CableItem>();
            this.ClusterItemMembers = new HashSet<ClusterItemMember>();
            this.ClusterItemMembers1 = new HashSet<ClusterItemMember>();
            this.DpItemHardwares = new HashSet<DpItemHardware>();
            this.EquipmentJobFunctions = new HashSet<EquipmentJobFunction>();
            this.EquipmentsNotes = new HashSet<EquipmentsNote>();
            this.Item1 = new HashSet<Item>();
            this.ItemExtendedMetaFields = new HashSet<ItemExtendedMetaField>();
            this.ItemMetaDatas = new HashSet<ItemMetaData>();
            this.ItemNICs = new HashSet<ItemNIC>();
            this.ItemRoles = new HashSet<ItemRole>();
            this.ItemServerRoles = new HashSet<ItemServerRole>();
            this.JobOrders = new HashSet<JobOrder>();
            this.Locations = new HashSet<Location>();
            this.DocRepositories = new HashSet<DocRepository>();
        }
    
        public long ID { get; set; }
        public long MetaItemID { get; set; }
        public Nullable<int> LocationID { get; set; }
        public bool Active { get; set; }
        public Nullable<long> Parent { get; set; }
        public int RelativeLocation { get; set; }
        public string Name { get; set; }
        public string IPAddress { get; set; }
        public string Description { get; set; }
        public string BIOSName { get; set; }
        public bool Publish { get; set; }
        public string Owner { get; set; }
        public Nullable<long> RackID { get; set; }
        public Nullable<int> RoomID { get; set; }
        public int StatusID { get; set; }
        public Nullable<System.DateTime> InsertTimeStamp { get; set; }
        public Nullable<System.DateTime> InstallTimeStamp { get; set; }
        public Nullable<System.DateTime> WarrentyStartDate { get; set; }
        public Nullable<System.DateTime> WarrentyEndDate { get; set; }
        public Nullable<System.DateTime> ContractStartDate { get; set; }
        public Nullable<System.DateTime> ContractEndDate { get; set; }
        public string AssertNumber { get; set; }
        public string UserName { get; set; }
        public string UserFirstName { get; set; }
        public string UserLastName { get; set; }
        public string UserGUID { get; set; }
        public Nullable<int> EnvironmentId { get; set; }
        public Nullable<int> TotalPowerWallt { get; set; }
        public Nullable<int> TotalPowerVA { get; set; }
        public Nullable<int> DomainId { get; set; }
        public string Instruction { get; set; }
        public Nullable<int> ClusterID { get; set; }
        public Nullable<int> MemberID { get; set; }
        public Nullable<bool> Manual { get; set; }
        public Nullable<bool> Monitoring { get; set; }
        public Nullable<bool> Billable { get; set; }
        public string ManagmentAddress { get; set; }
        public Nullable<bool> IsExistInDR { get; set; }
        public Nullable<System.DateTime> OutOfServiceDate { get; set; }
        public Nullable<int> DrNameID { get; set; }
        public string LastUpdateUser { get; set; }
        public Nullable<bool> RearLocation { get; set; }
        public Nullable<decimal> MetaItemCost { get; set; }
        public Nullable<bool> RequiredInDR { get; set; }
        public Nullable<System.DateTime> InformationsecurityLastUpdate { get; set; }
        public Nullable<System.DateTime> LastUpdate { get; set; }
        public string WorkflowID { get; set; }
        public string PurchaseOrderNumber { get; set; }
        public Nullable<bool> FileLevelBackup { get; set; }
        public string TDPBackup { get; set; }
        public string BackupRemarks { get; set; }
        public string IOSVersion { get; set; }
        public string ImageInstalled { get; set; }
        public string InstallationTicket { get; set; }
        public string RemovalTicket { get; set; }
        public Nullable<int> EsxHostID { get; set; }
        public Nullable<int> DownTimeID { get; set; }
        public string OperationNotes { get; set; }
        public string CheckListName { get; set; }
        public string CheckListName2 { get; set; }
        public Nullable<bool> AntiVirus { get; set; }
        public Nullable<bool> ExBackup { get; set; }
        public Nullable<bool> SecurityUpdates { get; set; }
        public Nullable<bool> MSUpdates { get; set; }
        public Nullable<bool> ObserveIT { get; set; }
        public Nullable<bool> DowntimeFlag { get; set; }
        public string DownTimeConflictReason { get; set; }
        public string SerailNumber { get; set; }
        public Nullable<int> DowntimeGroupID { get; set; }
        public string ItemLastSeen { get; set; }
        public string OSName { get; set; }
        public Nullable<bool> IsServer { get; set; }
        public Nullable<int> ServiceContactID { get; set; }
        public Nullable<int> RoundId { get; set; }
        public Nullable<bool> IsApprovedSecurity { get; set; }
        public Nullable<System.DateTime> DateSecurity { get; set; }
        public Nullable<int> Essance { get; set; }
        public string SysID { get; set; }
        public Nullable<int> RoleType { get; set; }
        public Nullable<System.DateTime> PurchaseTimeStamp { get; set; }
        public Nullable<System.DateTime> ExclusionRequestDate { get; set; }
        public Nullable<bool> ExportBackup { get; set; }
        public int IsComm { get; set; }
        public int IsPassive { get; set; }
        public string FunctionalStation { get; set; }
        public Nullable<bool> IsVM { get; set; }
        public Nullable<decimal> MetaItemCostDollar { get; set; }
        public Nullable<int> WarrantyId { get; set; }
        public Nullable<int> IsDegradation { get; set; }
        public Nullable<int> VENDORID { get; set; }
        public string Alternative { get; set; }
        public string diskCapacity { get; set; }
        public Nullable<int> DiminutionReasId { get; set; }
        public Nullable<bool> ActivePassive { get; set; }
        public string NetoPrice { get; set; }
        public string BelongsTo { get; set; }
        public string Custodian { get; set; }
        public Nullable<bool> IsInfra { get; set; }
        public string Sysaid_notes { get; set; }
        public Nullable<int> PctNum { get; set; }
        public Nullable<int> SubstituteItemId { get; set; }
        public Nullable<int> SlaTier { get; set; }
        public string AccessGroup { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<AccessDetail> AccessDetails { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CableItem> CableItems { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<CableItem> CableItems1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ClusterItemMember> ClusterItemMembers { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ClusterItemMember> ClusterItemMembers1 { get; set; }
        public virtual Cluster Cluster { get; set; }
        public virtual DownTime DownTime { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DpItemHardware> DpItemHardwares { get; set; }
        public virtual Environment Environment { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EquipmentJobFunction> EquipmentJobFunctions { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<EquipmentsNote> EquipmentsNotes { get; set; }
        public virtual MetaItem MetaItem { get; set; }
        public virtual MetaItem MetaItem1 { get; set; }
        public virtual MetaItem MetaItem2 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Item> Item1 { get; set; }
        public virtual Item Item2 { get; set; }
        public virtual ItemStatu ItemStatu { get; set; }
        public virtual Rack Rack { get; set; }
        public virtual Room Room { get; set; }
        public virtual ItemData ItemData { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ItemExtendedMetaField> ItemExtendedMetaFields { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ItemMetaData> ItemMetaDatas { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ItemNIC> ItemNICs { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ItemRole> ItemRoles { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ItemServerRole> ItemServerRoles { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<JobOrder> JobOrders { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Location> Locations { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DocRepository> DocRepositories { get; set; }
    }
}
